// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rusk.proto

package rusk

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RuskMock struct{}

func (m *RuskMock) Echo(ctx context.Context, req *EchoRequest) (*EchoResponse, error) {
	res :=
		&EchoResponse{}
	return res, nil
}
func (m *RuskMock) ValidateStateTransition(ctx context.Context, req *ValidateStateTransitionRequest) (*ValidateStateTransitionResponse, error) {
	res :=
		&ValidateStateTransitionResponse{
			SuccessfulCalls: []*ContractCall{
				&ContractCall{
					ContractCall: &ContractCall_Tx{
						Tx: &Transaction{
							Inputs: []*TransactionInput{
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_TransparentValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_TransparentValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
							},
							Outputs: []*TransactionOutput{
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_EncryptedValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_EncryptedValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
							Fee: &TransactionOutput{
								Note: &Note{
									NoteType:        1,
									Nonce:           &Nonce{},
									RG:              &CompressedPoint{},
									PkR:             &CompressedPoint{},
									ValueCommitment: &Scalar{},
									BlindingFactor:  &Note_EncryptedBlindingFactor{},
									Value:           &Note_TransparentValue{},
								},
								Pk: &PublicKey{
									AG: &CompressedPoint{},
									BG: &CompressedPoint{},
								},
								BlindingFactor: &Scalar{},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Distribute{
						Distribute: &DistributeTransaction{
							BgPk: &PublicKey{
								AG: &CompressedPoint{},
								BG: &CompressedPoint{},
							},
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Withdraw{
						Withdraw: &WithdrawFeesTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Distribute{
						Distribute: &DistributeTransaction{
							BgPk: &PublicKey{
								AG: &CompressedPoint{},
								BG: &CompressedPoint{},
							},
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Distribute{
						Distribute: &DistributeTransaction{
							BgPk: &PublicKey{
								AG: &CompressedPoint{},
								BG: &CompressedPoint{},
							},
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_TransparentValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Tx{
						Tx: &Transaction{
							Inputs: []*TransactionInput{
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_EncryptedValue{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_EncryptedValue{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
								&TransactionInput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Sk: &SecretKey{
										A: &Scalar{},
										B: &Scalar{},
									},
									Nullifier: &Nullifier{
										H: &Scalar{},
									},
									MerkleRoot: &Scalar{},
								},
							},
							Outputs: []*TransactionOutput{
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
								&TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
							Fee: &TransactionOutput{
								Note: &Note{
									NoteType:        1,
									Nonce:           &Nonce{},
									RG:              &CompressedPoint{},
									PkR:             &CompressedPoint{},
									ValueCommitment: &Scalar{},
									BlindingFactor:  &Note_EncryptedBlindingFactor{},
									Value:           &Note_TransparentValue{},
								},
								Pk: &PublicKey{
									AG: &CompressedPoint{},
									BG: &CompressedPoint{},
								},
								BlindingFactor: &Scalar{},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Stake{
						Stake: &StakeTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_WithdrawStake{
						WithdrawStake: &WithdrawStakeTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) ExecuteStateTransition(ctx context.Context, req *ExecuteStateTransitionRequest) (*ExecuteStateTransitionResponse, error) {
	res :=
		&ExecuteStateTransitionResponse{
			Calls: []*ContractCall{
				&ContractCall{
					ContractCall: &ContractCall_Distribute{
						Distribute: &DistributeTransaction{
							BgPk: &PublicKey{
								AG: &CompressedPoint{},
								BG: &CompressedPoint{},
							},
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Stake{
						Stake: &StakeTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Stake{
						Stake: &StakeTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Stake{
						Stake: &StakeTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Slash{
						Slash: &SlashTransaction{
							Step: 218,
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_EncryptedValue{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        1,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Slash{
						Slash: &SlashTransaction{
							Step: 766,
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
										Value: &Note_TransparentValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_WithdrawBid{
						WithdrawBid: &WithdrawBidTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										Value:           &Note_EncryptedValue{},
										BlindingFactor: &Note_TransparentBlindingFactor{
											TransparentBlindingFactor: &Scalar{},
										},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
				&ContractCall{
					ContractCall: &ContractCall_Withdraw{
						Withdraw: &WithdrawFeesTransaction{
							Tx: &Transaction{
								Inputs: []*TransactionInput{
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
									&TransactionInput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Sk: &SecretKey{
											A: &Scalar{},
											B: &Scalar{},
										},
										Nullifier: &Nullifier{
											H: &Scalar{},
										},
										MerkleRoot: &Scalar{},
									},
								},
								Outputs: []*TransactionOutput{
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											Value:           &Note_TransparentValue{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor:  &Note_EncryptedBlindingFactor{},
											Value:           &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        0,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_TransparentValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
									&TransactionOutput{
										Note: &Note{
											NoteType:        1,
											Nonce:           &Nonce{},
											RG:              &CompressedPoint{},
											PkR:             &CompressedPoint{},
											ValueCommitment: &Scalar{},
											BlindingFactor: &Note_TransparentBlindingFactor{
												TransparentBlindingFactor: &Scalar{},
											},
											Value: &Note_EncryptedValue{},
										},
										Pk: &PublicKey{
											AG: &CompressedPoint{},
											BG: &CompressedPoint{},
										},
										BlindingFactor: &Scalar{},
									},
								},
								Fee: &TransactionOutput{
									Note: &Note{
										NoteType:        0,
										Nonce:           &Nonce{},
										RG:              &CompressedPoint{},
										PkR:             &CompressedPoint{},
										ValueCommitment: &Scalar{},
										BlindingFactor:  &Note_EncryptedBlindingFactor{},
										Value:           &Note_EncryptedValue{},
									},
									Pk: &PublicKey{
										AG: &CompressedPoint{},
										BG: &CompressedPoint{},
									},
									BlindingFactor: &Scalar{},
								},
							},
						},
					},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) GenerateScore(ctx context.Context, req *GenerateScoreRequest) (*GenerateScoreResponse, error) {
	res :=
		&GenerateScoreResponse{}
	return res, nil
}
func (m *RuskMock) GenerateSecretKey(ctx context.Context, req *GenerateSecretKeyRequest) (*SecretKey, error) {
	res :=
		&SecretKey{
			A: &Scalar{},
			B: &Scalar{},
		}
	return res, nil
}
func (m *RuskMock) Keys(ctx context.Context, req *SecretKey) (*KeysResponse, error) {
	res :=
		&KeysResponse{
			Vk: &ViewKey{
				A:  &Scalar{},
				BG: &CompressedPoint{},
			},
			Pk: &PublicKey{
				AG: &CompressedPoint{},
				BG: &CompressedPoint{},
			},
		}
	return res, nil
}
func (m *RuskMock) FullScanOwnedNotes(ctx context.Context, req *ViewKey) (*OwnedNotesResponse, error) {
	res :=
		&OwnedNotesResponse{
			Notes: []*DecryptedNote{
				&DecryptedNote{
					NoteType:          1,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_EncryptedValue{},
				},
				&DecryptedNote{
					NoteType:        1,
					Nonce:           &Nonce{},
					RG:              &CompressedPoint{},
					PkR:             &CompressedPoint{},
					ValueCommitment: &Scalar{},
					BlindingFactor:  &Scalar{},
					RawBlindingFactor: &DecryptedNote_TransparentBlindingFactor{
						TransparentBlindingFactor: &Scalar{},
					},
					RawValue: &DecryptedNote_TransparentValue{},
				},
				&DecryptedNote{
					NoteType:          0,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_TransparentValue{},
				},
				&DecryptedNote{
					NoteType:        1,
					Nonce:           &Nonce{},
					RG:              &CompressedPoint{},
					PkR:             &CompressedPoint{},
					ValueCommitment: &Scalar{},
					BlindingFactor:  &Scalar{},
					RawBlindingFactor: &DecryptedNote_TransparentBlindingFactor{
						TransparentBlindingFactor: &Scalar{},
					},
					RawValue: &DecryptedNote_TransparentValue{},
				},
				&DecryptedNote{
					NoteType:          0,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_TransparentValue{},
				},
				&DecryptedNote{
					NoteType:          0,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_TransparentValue{},
				},
				&DecryptedNote{
					NoteType:          0,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_EncryptedValue{},
				},
				&DecryptedNote{
					NoteType:          0,
					Nonce:             &Nonce{},
					RG:                &CompressedPoint{},
					PkR:               &CompressedPoint{},
					ValueCommitment:   &Scalar{},
					BlindingFactor:    &Scalar{},
					RawBlindingFactor: &DecryptedNote_EncryptedBlindingFactor{},
					RawValue:          &DecryptedNote_TransparentValue{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) NewTransaction(ctx context.Context, req *NewTransactionRequest) (*Transaction, error) {
	res :=
		&Transaction{
			Inputs: []*TransactionInput{
				&TransactionInput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor: &Note_TransparentBlindingFactor{
							TransparentBlindingFactor: &Scalar{},
						},
						Value: &Note_TransparentValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor: &Note_TransparentBlindingFactor{
							TransparentBlindingFactor: &Scalar{},
						},
						Value: &Note_EncryptedValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
				&TransactionInput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor: &Note_TransparentBlindingFactor{
							TransparentBlindingFactor: &Scalar{},
						},
						Value: &Note_TransparentValue{},
					},
					Sk: &SecretKey{
						A: &Scalar{},
						B: &Scalar{},
					},
					Nullifier: &Nullifier{
						H: &Scalar{},
					},
					MerkleRoot: &Scalar{},
				},
			},
			Outputs: []*TransactionOutput{
				&TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						Value:           &Note_EncryptedValue{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor: &Note_TransparentBlindingFactor{
							TransparentBlindingFactor: &Scalar{},
						},
						Value: &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor: &Note_TransparentBlindingFactor{
							TransparentBlindingFactor: &Scalar{},
						},
						Value: &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
				&TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
			Fee: &TransactionOutput{
				Note: &Note{
					NoteType:        1,
					Nonce:           &Nonce{},
					RG:              &CompressedPoint{},
					PkR:             &CompressedPoint{},
					ValueCommitment: &Scalar{},
					BlindingFactor:  &Note_EncryptedBlindingFactor{},
					Value:           &Note_EncryptedValue{},
				},
				Pk: &PublicKey{
					AG: &CompressedPoint{},
					BG: &CompressedPoint{},
				},
				BlindingFactor: &Scalar{},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyTransaction(ctx context.Context, req *Transaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: true,
		}
	return res, nil
}
func (m *RuskMock) NewStake(ctx context.Context, req *StakeTransactionRequest) (*StakeTransaction, error) {
	res :=
		&StakeTransaction{
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyStake(ctx context.Context, req *StakeTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: true,
		}
	return res, nil
}
func (m *RuskMock) NewWithdrawStake(ctx context.Context, req *WithdrawStakeTransactionRequest) (*WithdrawStakeTransaction, error) {
	res :=
		&WithdrawStakeTransaction{
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						Value:           &Note_EncryptedValue{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyWithdrawStake(ctx context.Context, req *WithdrawStakeTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: false,
		}
	return res, nil
}
func (m *RuskMock) NewBid(ctx context.Context, req *BidTransactionRequest) (*BidTransaction, error) {
	res :=
		&BidTransaction{
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_EncryptedValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyBid(ctx context.Context, req *BidTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: false,
		}
	return res, nil
}
func (m *RuskMock) NewWithdrawBid(ctx context.Context, req *WithdrawBidTransactionRequest) (*WithdrawBidTransaction, error) {
	res :=
		&WithdrawBidTransaction{
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyWithdrawBid(ctx context.Context, req *WithdrawBidTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: true,
		}
	return res, nil
}
func (m *RuskMock) NewDistribute(ctx context.Context, req *DistributeTransactionRequest) (*DistributeTransaction, error) {
	res :=
		&DistributeTransaction{
			BgPk: &PublicKey{
				AG: &CompressedPoint{},
				BG: &CompressedPoint{},
			},
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyDistribute(ctx context.Context, req *DistributeTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: false,
		}
	return res, nil
}
func (m *RuskMock) NewWithdrawFees(ctx context.Context, req *WithdrawFeesTransactionRequest) (*WithdrawFeesTransaction, error) {
	res :=
		&WithdrawFeesTransaction{
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        0,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifyWithdrawFees(ctx context.Context, req *WithdrawFeesTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: true,
		}
	return res, nil
}
func (m *RuskMock) NewSlash(ctx context.Context, req *SlashTransactionRequest) (*SlashTransaction, error) {
	res :=
		&SlashTransaction{
			Step: 290,
			Tx: &Transaction{
				Inputs: []*TransactionInput{
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_TransparentValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
					&TransactionInput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Sk: &SecretKey{
							A: &Scalar{},
							B: &Scalar{},
						},
						Nullifier: &Nullifier{
							H: &Scalar{},
						},
						MerkleRoot: &Scalar{},
					},
				},
				Outputs: []*TransactionOutput{
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        0,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							Value:           &Note_EncryptedValue{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor: &Note_TransparentBlindingFactor{
								TransparentBlindingFactor: &Scalar{},
							},
							Value: &Note_EncryptedValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
					&TransactionOutput{
						Note: &Note{
							NoteType:        1,
							Nonce:           &Nonce{},
							RG:              &CompressedPoint{},
							PkR:             &CompressedPoint{},
							ValueCommitment: &Scalar{},
							BlindingFactor:  &Note_EncryptedBlindingFactor{},
							Value:           &Note_TransparentValue{},
						},
						Pk: &PublicKey{
							AG: &CompressedPoint{},
							BG: &CompressedPoint{},
						},
						BlindingFactor: &Scalar{},
					},
				},
				Fee: &TransactionOutput{
					Note: &Note{
						NoteType:        1,
						Nonce:           &Nonce{},
						RG:              &CompressedPoint{},
						PkR:             &CompressedPoint{},
						ValueCommitment: &Scalar{},
						BlindingFactor:  &Note_EncryptedBlindingFactor{},
						Value:           &Note_TransparentValue{},
					},
					Pk: &PublicKey{
						AG: &CompressedPoint{},
						BG: &CompressedPoint{},
					},
					BlindingFactor: &Scalar{},
				},
			},
		}
	return res, nil
}
func (m *RuskMock) VerifySlash(ctx context.Context, req *SlashTransaction) (*VerifyTransactionResponse, error) {
	res :=
		&VerifyTransactionResponse{
			Verified: true,
		}
	return res, nil
}
