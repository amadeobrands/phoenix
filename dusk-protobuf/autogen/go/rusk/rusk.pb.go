// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rusk.proto

package rusk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EchoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{0}
}

func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

type EchoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{1}
}

func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (m *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(m, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

type ValidateStateTransitionRequest struct {
	// List of transactions to be validated
	Txs                  []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ValidateStateTransitionRequest) Reset()         { *m = ValidateStateTransitionRequest{} }
func (m *ValidateStateTransitionRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateStateTransitionRequest) ProtoMessage()    {}
func (*ValidateStateTransitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{2}
}

func (m *ValidateStateTransitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateStateTransitionRequest.Unmarshal(m, b)
}
func (m *ValidateStateTransitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateStateTransitionRequest.Marshal(b, m, deterministic)
}
func (m *ValidateStateTransitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStateTransitionRequest.Merge(m, src)
}
func (m *ValidateStateTransitionRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateStateTransitionRequest.Size(m)
}
func (m *ValidateStateTransitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStateTransitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStateTransitionRequest proto.InternalMessageInfo

func (m *ValidateStateTransitionRequest) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type ValidateStateTransitionResponse struct {
	// Status of the state transition
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateStateTransitionResponse) Reset()         { *m = ValidateStateTransitionResponse{} }
func (m *ValidateStateTransitionResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateStateTransitionResponse) ProtoMessage()    {}
func (*ValidateStateTransitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{3}
}

func (m *ValidateStateTransitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateStateTransitionResponse.Unmarshal(m, b)
}
func (m *ValidateStateTransitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateStateTransitionResponse.Marshal(b, m, deterministic)
}
func (m *ValidateStateTransitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStateTransitionResponse.Merge(m, src)
}
func (m *ValidateStateTransitionResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateStateTransitionResponse.Size(m)
}
func (m *ValidateStateTransitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStateTransitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStateTransitionResponse proto.InternalMessageInfo

func (m *ValidateStateTransitionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GenerateSecretKeyRequest struct {
	B                    []byte   `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateSecretKeyRequest) Reset()         { *m = GenerateSecretKeyRequest{} }
func (m *GenerateSecretKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateSecretKeyRequest) ProtoMessage()    {}
func (*GenerateSecretKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{4}
}

func (m *GenerateSecretKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateSecretKeyRequest.Unmarshal(m, b)
}
func (m *GenerateSecretKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateSecretKeyRequest.Marshal(b, m, deterministic)
}
func (m *GenerateSecretKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateSecretKeyRequest.Merge(m, src)
}
func (m *GenerateSecretKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateSecretKeyRequest.Size(m)
}
func (m *GenerateSecretKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateSecretKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateSecretKeyRequest proto.InternalMessageInfo

func (m *GenerateSecretKeyRequest) GetB() []byte {
	if m != nil {
		return m.B
	}
	return nil
}

type NullifierRequest struct {
	Note                 *Note      `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	Sk                   *SecretKey `protobuf:"bytes,2,opt,name=sk,proto3" json:"sk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NullifierRequest) Reset()         { *m = NullifierRequest{} }
func (m *NullifierRequest) String() string { return proto.CompactTextString(m) }
func (*NullifierRequest) ProtoMessage()    {}
func (*NullifierRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{5}
}

func (m *NullifierRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullifierRequest.Unmarshal(m, b)
}
func (m *NullifierRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullifierRequest.Marshal(b, m, deterministic)
}
func (m *NullifierRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullifierRequest.Merge(m, src)
}
func (m *NullifierRequest) XXX_Size() int {
	return xxx_messageInfo_NullifierRequest.Size(m)
}
func (m *NullifierRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NullifierRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NullifierRequest proto.InternalMessageInfo

func (m *NullifierRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *NullifierRequest) GetSk() *SecretKey {
	if m != nil {
		return m.Sk
	}
	return nil
}

type NullifierResponse struct {
	Nullifier            *Nullifier `protobuf:"bytes,1,opt,name=nullifier,proto3" json:"nullifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NullifierResponse) Reset()         { *m = NullifierResponse{} }
func (m *NullifierResponse) String() string { return proto.CompactTextString(m) }
func (*NullifierResponse) ProtoMessage()    {}
func (*NullifierResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{6}
}

func (m *NullifierResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullifierResponse.Unmarshal(m, b)
}
func (m *NullifierResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullifierResponse.Marshal(b, m, deterministic)
}
func (m *NullifierResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullifierResponse.Merge(m, src)
}
func (m *NullifierResponse) XXX_Size() int {
	return xxx_messageInfo_NullifierResponse.Size(m)
}
func (m *NullifierResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NullifierResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NullifierResponse proto.InternalMessageInfo

func (m *NullifierResponse) GetNullifier() *Nullifier {
	if m != nil {
		return m.Nullifier
	}
	return nil
}

type NullifierStatusRequest struct {
	Nullifier            *Nullifier `protobuf:"bytes,1,opt,name=nullifier,proto3" json:"nullifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NullifierStatusRequest) Reset()         { *m = NullifierStatusRequest{} }
func (m *NullifierStatusRequest) String() string { return proto.CompactTextString(m) }
func (*NullifierStatusRequest) ProtoMessage()    {}
func (*NullifierStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{7}
}

func (m *NullifierStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullifierStatusRequest.Unmarshal(m, b)
}
func (m *NullifierStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullifierStatusRequest.Marshal(b, m, deterministic)
}
func (m *NullifierStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullifierStatusRequest.Merge(m, src)
}
func (m *NullifierStatusRequest) XXX_Size() int {
	return xxx_messageInfo_NullifierStatusRequest.Size(m)
}
func (m *NullifierStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NullifierStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NullifierStatusRequest proto.InternalMessageInfo

func (m *NullifierStatusRequest) GetNullifier() *Nullifier {
	if m != nil {
		return m.Nullifier
	}
	return nil
}

type NullifierStatusResponse struct {
	Unspent              bool     `protobuf:"varint,1,opt,name=unspent,proto3" json:"unspent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullifierStatusResponse) Reset()         { *m = NullifierStatusResponse{} }
func (m *NullifierStatusResponse) String() string { return proto.CompactTextString(m) }
func (*NullifierStatusResponse) ProtoMessage()    {}
func (*NullifierStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{8}
}

func (m *NullifierStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullifierStatusResponse.Unmarshal(m, b)
}
func (m *NullifierStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullifierStatusResponse.Marshal(b, m, deterministic)
}
func (m *NullifierStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullifierStatusResponse.Merge(m, src)
}
func (m *NullifierStatusResponse) XXX_Size() int {
	return xxx_messageInfo_NullifierStatusResponse.Size(m)
}
func (m *NullifierStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NullifierStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NullifierStatusResponse proto.InternalMessageInfo

func (m *NullifierStatusResponse) GetUnspent() bool {
	if m != nil {
		return m.Unspent
	}
	return false
}

type FetchNoteRequest struct {
	Pos                  uint64   `protobuf:"fixed64,1,opt,name=pos,proto3" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchNoteRequest) Reset()         { *m = FetchNoteRequest{} }
func (m *FetchNoteRequest) String() string { return proto.CompactTextString(m) }
func (*FetchNoteRequest) ProtoMessage()    {}
func (*FetchNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{9}
}

func (m *FetchNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchNoteRequest.Unmarshal(m, b)
}
func (m *FetchNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchNoteRequest.Marshal(b, m, deterministic)
}
func (m *FetchNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchNoteRequest.Merge(m, src)
}
func (m *FetchNoteRequest) XXX_Size() int {
	return xxx_messageInfo_FetchNoteRequest.Size(m)
}
func (m *FetchNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchNoteRequest proto.InternalMessageInfo

func (m *FetchNoteRequest) GetPos() uint64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

type DecryptNoteRequest struct {
	Note                 *Note    `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	Vk                   *ViewKey `protobuf:"bytes,2,opt,name=vk,proto3" json:"vk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptNoteRequest) Reset()         { *m = DecryptNoteRequest{} }
func (m *DecryptNoteRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptNoteRequest) ProtoMessage()    {}
func (*DecryptNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{10}
}

func (m *DecryptNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptNoteRequest.Unmarshal(m, b)
}
func (m *DecryptNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptNoteRequest.Marshal(b, m, deterministic)
}
func (m *DecryptNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptNoteRequest.Merge(m, src)
}
func (m *DecryptNoteRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptNoteRequest.Size(m)
}
func (m *DecryptNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptNoteRequest proto.InternalMessageInfo

func (m *DecryptNoteRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *DecryptNoteRequest) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

type OwnedNotesRequest struct {
	Vk                   *ViewKey `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	Notes                []*Note  `protobuf:"bytes,2,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OwnedNotesRequest) Reset()         { *m = OwnedNotesRequest{} }
func (m *OwnedNotesRequest) String() string { return proto.CompactTextString(m) }
func (*OwnedNotesRequest) ProtoMessage()    {}
func (*OwnedNotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{11}
}

func (m *OwnedNotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnedNotesRequest.Unmarshal(m, b)
}
func (m *OwnedNotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnedNotesRequest.Marshal(b, m, deterministic)
}
func (m *OwnedNotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnedNotesRequest.Merge(m, src)
}
func (m *OwnedNotesRequest) XXX_Size() int {
	return xxx_messageInfo_OwnedNotesRequest.Size(m)
}
func (m *OwnedNotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnedNotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OwnedNotesRequest proto.InternalMessageInfo

func (m *OwnedNotesRequest) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

func (m *OwnedNotesRequest) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

type OwnedNotesResponse struct {
	Notes                []*DecryptedNote `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OwnedNotesResponse) Reset()         { *m = OwnedNotesResponse{} }
func (m *OwnedNotesResponse) String() string { return proto.CompactTextString(m) }
func (*OwnedNotesResponse) ProtoMessage()    {}
func (*OwnedNotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{12}
}

func (m *OwnedNotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnedNotesResponse.Unmarshal(m, b)
}
func (m *OwnedNotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnedNotesResponse.Marshal(b, m, deterministic)
}
func (m *OwnedNotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnedNotesResponse.Merge(m, src)
}
func (m *OwnedNotesResponse) XXX_Size() int {
	return xxx_messageInfo_OwnedNotesResponse.Size(m)
}
func (m *OwnedNotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnedNotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OwnedNotesResponse proto.InternalMessageInfo

func (m *OwnedNotesResponse) GetNotes() []*DecryptedNote {
	if m != nil {
		return m.Notes
	}
	return nil
}

type NewTransactionInputRequest struct {
	Pos                  uint64     `protobuf:"fixed64,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Sk                   *SecretKey `protobuf:"bytes,2,opt,name=sk,proto3" json:"sk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewTransactionInputRequest) Reset()         { *m = NewTransactionInputRequest{} }
func (m *NewTransactionInputRequest) String() string { return proto.CompactTextString(m) }
func (*NewTransactionInputRequest) ProtoMessage()    {}
func (*NewTransactionInputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{13}
}

func (m *NewTransactionInputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTransactionInputRequest.Unmarshal(m, b)
}
func (m *NewTransactionInputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTransactionInputRequest.Marshal(b, m, deterministic)
}
func (m *NewTransactionInputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTransactionInputRequest.Merge(m, src)
}
func (m *NewTransactionInputRequest) XXX_Size() int {
	return xxx_messageInfo_NewTransactionInputRequest.Size(m)
}
func (m *NewTransactionInputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTransactionInputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTransactionInputRequest proto.InternalMessageInfo

func (m *NewTransactionInputRequest) GetPos() uint64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *NewTransactionInputRequest) GetSk() *SecretKey {
	if m != nil {
		return m.Sk
	}
	return nil
}

type NewTransactionOutputRequest struct {
	NoteType             NoteType   `protobuf:"varint,1,opt,name=note_type,json=noteType,proto3,enum=rusk.NoteType" json:"note_type,omitempty"`
	Pk                   *PublicKey `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	Value                uint64     `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewTransactionOutputRequest) Reset()         { *m = NewTransactionOutputRequest{} }
func (m *NewTransactionOutputRequest) String() string { return proto.CompactTextString(m) }
func (*NewTransactionOutputRequest) ProtoMessage()    {}
func (*NewTransactionOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{14}
}

func (m *NewTransactionOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTransactionOutputRequest.Unmarshal(m, b)
}
func (m *NewTransactionOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTransactionOutputRequest.Marshal(b, m, deterministic)
}
func (m *NewTransactionOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTransactionOutputRequest.Merge(m, src)
}
func (m *NewTransactionOutputRequest) XXX_Size() int {
	return xxx_messageInfo_NewTransactionOutputRequest.Size(m)
}
func (m *NewTransactionOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTransactionOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTransactionOutputRequest proto.InternalMessageInfo

func (m *NewTransactionOutputRequest) GetNoteType() NoteType {
	if m != nil {
		return m.NoteType
	}
	return NoteType_TRANSPARENT
}

func (m *NewTransactionOutputRequest) GetPk() *PublicKey {
	if m != nil {
		return m.Pk
	}
	return nil
}

func (m *NewTransactionOutputRequest) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type NewTransactionRequest struct {
	Sk                   *SecretKey       `protobuf:"bytes,1,opt,name=sk,proto3" json:"sk,omitempty"`
	Inputs               []*DecryptedNote `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Recipient            *PublicKey       `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Value                uint64           `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	Fee                  uint64           `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewTransactionRequest) Reset()         { *m = NewTransactionRequest{} }
func (m *NewTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*NewTransactionRequest) ProtoMessage()    {}
func (*NewTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{15}
}

func (m *NewTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTransactionRequest.Unmarshal(m, b)
}
func (m *NewTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTransactionRequest.Marshal(b, m, deterministic)
}
func (m *NewTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTransactionRequest.Merge(m, src)
}
func (m *NewTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_NewTransactionRequest.Size(m)
}
func (m *NewTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTransactionRequest proto.InternalMessageInfo

func (m *NewTransactionRequest) GetSk() *SecretKey {
	if m != nil {
		return m.Sk
	}
	return nil
}

func (m *NewTransactionRequest) GetInputs() []*DecryptedNote {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *NewTransactionRequest) GetRecipient() *PublicKey {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *NewTransactionRequest) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *NewTransactionRequest) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

type VerifyTransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTransactionResponse) Reset()         { *m = VerifyTransactionResponse{} }
func (m *VerifyTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyTransactionResponse) ProtoMessage()    {}
func (*VerifyTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{16}
}

func (m *VerifyTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTransactionResponse.Unmarshal(m, b)
}
func (m *VerifyTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTransactionResponse.Marshal(b, m, deterministic)
}
func (m *VerifyTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTransactionResponse.Merge(m, src)
}
func (m *VerifyTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyTransactionResponse.Size(m)
}
func (m *VerifyTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTransactionResponse proto.InternalMessageInfo

type VerifyTransactionRootRequest struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Root                 *Scalar      `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VerifyTransactionRootRequest) Reset()         { *m = VerifyTransactionRootRequest{} }
func (m *VerifyTransactionRootRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyTransactionRootRequest) ProtoMessage()    {}
func (*VerifyTransactionRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{17}
}

func (m *VerifyTransactionRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTransactionRootRequest.Unmarshal(m, b)
}
func (m *VerifyTransactionRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTransactionRootRequest.Marshal(b, m, deterministic)
}
func (m *VerifyTransactionRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTransactionRootRequest.Merge(m, src)
}
func (m *VerifyTransactionRootRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyTransactionRootRequest.Size(m)
}
func (m *VerifyTransactionRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTransactionRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTransactionRootRequest proto.InternalMessageInfo

func (m *VerifyTransactionRootRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *VerifyTransactionRootRequest) GetRoot() *Scalar {
	if m != nil {
		return m.Root
	}
	return nil
}

type VerifyTransactionRootResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTransactionRootResponse) Reset()         { *m = VerifyTransactionRootResponse{} }
func (m *VerifyTransactionRootResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyTransactionRootResponse) ProtoMessage()    {}
func (*VerifyTransactionRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{18}
}

func (m *VerifyTransactionRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTransactionRootResponse.Unmarshal(m, b)
}
func (m *VerifyTransactionRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTransactionRootResponse.Marshal(b, m, deterministic)
}
func (m *VerifyTransactionRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTransactionRootResponse.Merge(m, src)
}
func (m *VerifyTransactionRootResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyTransactionRootResponse.Size(m)
}
func (m *VerifyTransactionRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTransactionRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTransactionRootResponse proto.InternalMessageInfo

type StoreTransactionsRequest struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StoreTransactionsRequest) Reset()         { *m = StoreTransactionsRequest{} }
func (m *StoreTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*StoreTransactionsRequest) ProtoMessage()    {}
func (*StoreTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{19}
}

func (m *StoreTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreTransactionsRequest.Unmarshal(m, b)
}
func (m *StoreTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *StoreTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreTransactionsRequest.Merge(m, src)
}
func (m *StoreTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_StoreTransactionsRequest.Size(m)
}
func (m *StoreTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreTransactionsRequest proto.InternalMessageInfo

func (m *StoreTransactionsRequest) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type StoreTransactionsResponse struct {
	Notes                []*Note  `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	Root                 *Scalar  `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreTransactionsResponse) Reset()         { *m = StoreTransactionsResponse{} }
func (m *StoreTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*StoreTransactionsResponse) ProtoMessage()    {}
func (*StoreTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{20}
}

func (m *StoreTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreTransactionsResponse.Unmarshal(m, b)
}
func (m *StoreTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *StoreTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreTransactionsResponse.Merge(m, src)
}
func (m *StoreTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_StoreTransactionsResponse.Size(m)
}
func (m *StoreTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreTransactionsResponse proto.InternalMessageInfo

func (m *StoreTransactionsResponse) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *StoreTransactionsResponse) GetRoot() *Scalar {
	if m != nil {
		return m.Root
	}
	return nil
}

type SetFeePkRequest struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Pk                   *PublicKey   `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetFeePkRequest) Reset()         { *m = SetFeePkRequest{} }
func (m *SetFeePkRequest) String() string { return proto.CompactTextString(m) }
func (*SetFeePkRequest) ProtoMessage()    {}
func (*SetFeePkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{21}
}

func (m *SetFeePkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFeePkRequest.Unmarshal(m, b)
}
func (m *SetFeePkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFeePkRequest.Marshal(b, m, deterministic)
}
func (m *SetFeePkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFeePkRequest.Merge(m, src)
}
func (m *SetFeePkRequest) XXX_Size() int {
	return xxx_messageInfo_SetFeePkRequest.Size(m)
}
func (m *SetFeePkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFeePkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetFeePkRequest proto.InternalMessageInfo

func (m *SetFeePkRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SetFeePkRequest) GetPk() *PublicKey {
	if m != nil {
		return m.Pk
	}
	return nil
}

type KeysResponse struct {
	Vk                   *ViewKey   `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	Pk                   *PublicKey `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KeysResponse) Reset()         { *m = KeysResponse{} }
func (m *KeysResponse) String() string { return proto.CompactTextString(m) }
func (*KeysResponse) ProtoMessage()    {}
func (*KeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{22}
}

func (m *KeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeysResponse.Unmarshal(m, b)
}
func (m *KeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeysResponse.Marshal(b, m, deterministic)
}
func (m *KeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeysResponse.Merge(m, src)
}
func (m *KeysResponse) XXX_Size() int {
	return xxx_messageInfo_KeysResponse.Size(m)
}
func (m *KeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeysResponse proto.InternalMessageInfo

func (m *KeysResponse) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

func (m *KeysResponse) GetPk() *PublicKey {
	if m != nil {
		return m.Pk
	}
	return nil
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "rusk.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "rusk.EchoResponse")
	proto.RegisterType((*ValidateStateTransitionRequest)(nil), "rusk.ValidateStateTransitionRequest")
	proto.RegisterType((*ValidateStateTransitionResponse)(nil), "rusk.ValidateStateTransitionResponse")
	proto.RegisterType((*GenerateSecretKeyRequest)(nil), "rusk.GenerateSecretKeyRequest")
	proto.RegisterType((*NullifierRequest)(nil), "rusk.NullifierRequest")
	proto.RegisterType((*NullifierResponse)(nil), "rusk.NullifierResponse")
	proto.RegisterType((*NullifierStatusRequest)(nil), "rusk.NullifierStatusRequest")
	proto.RegisterType((*NullifierStatusResponse)(nil), "rusk.NullifierStatusResponse")
	proto.RegisterType((*FetchNoteRequest)(nil), "rusk.FetchNoteRequest")
	proto.RegisterType((*DecryptNoteRequest)(nil), "rusk.DecryptNoteRequest")
	proto.RegisterType((*OwnedNotesRequest)(nil), "rusk.OwnedNotesRequest")
	proto.RegisterType((*OwnedNotesResponse)(nil), "rusk.OwnedNotesResponse")
	proto.RegisterType((*NewTransactionInputRequest)(nil), "rusk.NewTransactionInputRequest")
	proto.RegisterType((*NewTransactionOutputRequest)(nil), "rusk.NewTransactionOutputRequest")
	proto.RegisterType((*NewTransactionRequest)(nil), "rusk.NewTransactionRequest")
	proto.RegisterType((*VerifyTransactionResponse)(nil), "rusk.VerifyTransactionResponse")
	proto.RegisterType((*VerifyTransactionRootRequest)(nil), "rusk.VerifyTransactionRootRequest")
	proto.RegisterType((*VerifyTransactionRootResponse)(nil), "rusk.VerifyTransactionRootResponse")
	proto.RegisterType((*StoreTransactionsRequest)(nil), "rusk.StoreTransactionsRequest")
	proto.RegisterType((*StoreTransactionsResponse)(nil), "rusk.StoreTransactionsResponse")
	proto.RegisterType((*SetFeePkRequest)(nil), "rusk.SetFeePkRequest")
	proto.RegisterType((*KeysResponse)(nil), "rusk.KeysResponse")
}

func init() {
	proto.RegisterFile("rusk.proto", fileDescriptor_211ec4e18343b18f)
}

var fileDescriptor_211ec4e18343b18f = []byte{
	// 944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x5f, 0x6f, 0xdb, 0x36,
	0x10, 0x97, 0xff, 0x24, 0x8b, 0xcf, 0x6e, 0x12, 0xb3, 0x4d, 0xa2, 0x2a, 0x4d, 0xe2, 0xb1, 0x1d,
	0x90, 0xa1, 0x68, 0x87, 0x25, 0xd8, 0x5e, 0x06, 0xac, 0x58, 0xb1, 0xa6, 0x28, 0x0a, 0x24, 0xa9,
	0x6c, 0xe4, 0x35, 0x90, 0x95, 0xf3, 0x22, 0x58, 0x90, 0x34, 0x89, 0x4a, 0xe6, 0xc7, 0x7d, 0xaf,
	0x7d, 0x85, 0x7d, 0xa7, 0x81, 0x22, 0x29, 0x51, 0x96, 0x64, 0x6f, 0xd8, 0x1b, 0xc5, 0xbb, 0xfb,
	0xdd, 0xdd, 0xcf, 0xc7, 0xfb, 0x19, 0x20, 0x4e, 0x93, 0xf9, 0xdb, 0x28, 0x0e, 0x59, 0x48, 0xba,
	0xfc, 0x6c, 0xf5, 0x67, 0x1e, 0xfa, 0x77, 0xe2, 0xca, 0x82, 0x39, 0x2e, 0x12, 0x75, 0x0e, 0x42,
	0x86, 0xf2, 0x3c, 0x64, 0xb1, 0x13, 0x24, 0x8e, 0xcb, 0xbc, 0x30, 0x10, 0x57, 0xf4, 0x09, 0xf4,
	0x3f, 0xb8, 0xf7, 0xa1, 0x8d, 0xbf, 0xa7, 0x98, 0x30, 0xba, 0x0d, 0x03, 0xf1, 0x99, 0x44, 0x61,
	0x90, 0x20, 0xfd, 0x00, 0xc7, 0x37, 0x8e, 0xef, 0xdd, 0x39, 0x0c, 0xc7, 0xcc, 0x61, 0x38, 0xe1,
	0x00, 0x1e, 0x8f, 0x97, 0x11, 0xe4, 0x25, 0x74, 0xd8, 0x1f, 0x89, 0xd9, 0x1a, 0x75, 0x4e, 0xfb,
	0x67, 0xc3, 0xb7, 0x59, 0x61, 0x93, 0x22, 0x8d, 0xcd, 0xad, 0xf4, 0x27, 0x38, 0x69, 0x84, 0x11,
	0x99, 0x88, 0x09, 0x5f, 0x25, 0xa9, 0xeb, 0x62, 0xc2, 0xb1, 0x5a, 0xa7, 0x5b, 0xb6, 0xfa, 0xa4,
	0xa7, 0x60, 0x7e, 0xc4, 0x00, 0x63, 0x1e, 0x8c, 0x6e, 0x8c, 0xec, 0x33, 0x2e, 0x54, 0xf6, 0x01,
	0xb4, 0xa6, 0x99, 0xff, 0xc0, 0x6e, 0x4d, 0xe9, 0x18, 0x76, 0x2f, 0x53, 0xdf, 0xf7, 0x66, 0x1e,
	0xc6, 0xca, 0xe3, 0x18, 0xba, 0x9c, 0x81, 0xcc, 0xa9, 0x7f, 0x06, 0xa2, 0xc0, 0xcb, 0x90, 0xa1,
	0x9d, 0xdd, 0x93, 0x13, 0x68, 0x27, 0x73, 0xb3, 0x9d, 0x59, 0x77, 0x84, 0xb5, 0xc8, 0xd2, 0x4e,
	0xe6, 0xf4, 0x3d, 0x0c, 0x35, 0x50, 0x59, 0xed, 0x1b, 0xe8, 0x05, 0xea, 0x52, 0x42, 0xcb, 0xe0,
	0xc2, 0xb7, 0xf0, 0xa0, 0x1f, 0x61, 0x3f, 0xbf, 0xe7, 0x04, 0xa4, 0x89, 0x2a, 0xef, 0x3f, 0x02,
	0x9d, 0xc3, 0x41, 0x05, 0xa8, 0x20, 0x30, 0x0d, 0x92, 0x08, 0x03, 0xa6, 0x08, 0x94, 0x9f, 0xf4,
	0x15, 0xec, 0x5e, 0x20, 0x73, 0xef, 0xb3, 0xae, 0x65, 0xde, 0x5d, 0xe8, 0x44, 0xa1, 0xa0, 0x7a,
	0xd3, 0xe6, 0x47, 0x3a, 0x06, 0xf2, 0x2b, 0xba, 0xf1, 0x22, 0x62, 0xba, 0xdf, 0x3a, 0xfa, 0x8e,
	0xa0, 0xfd, 0xa0, 0xe8, 0x7b, 0x22, 0xac, 0x37, 0x1e, 0x3e, 0x66, 0xe4, 0x3d, 0xcc, 0xe9, 0x04,
	0x86, 0x57, 0x8f, 0x01, 0xde, 0xf1, 0x88, 0xbc, 0x67, 0x11, 0xd3, 0x6a, 0x88, 0x21, 0x23, 0xd8,
	0xe0, 0xd0, 0x89, 0xd9, 0xce, 0x66, 0x4a, 0xcf, 0x29, 0x0c, 0xf4, 0x1d, 0x10, 0x1d, 0x55, 0x12,
	0xf0, 0xad, 0x8a, 0x13, 0xb3, 0xf8, 0x54, 0xc4, 0xc9, 0x9e, 0x84, 0xb3, 0x02, 0xb8, 0x02, 0xeb,
	0x12, 0x1f, 0xb5, 0x31, 0xfd, 0x14, 0x44, 0x29, 0x6b, 0xe4, 0x66, 0xfd, 0x90, 0xfc, 0xd9, 0x82,
	0xc3, 0x32, 0xe2, 0x55, 0xca, 0x34, 0xc8, 0xd7, 0xd0, 0xe3, 0x99, 0x6f, 0xd9, 0x22, 0x12, 0x5c,
	0x6e, 0x9f, 0x6d, 0x17, 0x7d, 0x4d, 0x16, 0x11, 0xda, 0x5b, 0x81, 0x3c, 0xf1, 0x6c, 0xd1, 0x52,
	0xb6, 0xeb, 0x74, 0xea, 0x7b, 0x6e, 0x96, 0x2d, 0x9a, 0x93, 0x67, 0xb0, 0xf1, 0xe0, 0xf8, 0x29,
	0x9a, 0x9d, 0xac, 0x44, 0xf1, 0x41, 0xff, 0x6a, 0xc1, 0x5e, 0xb9, 0x06, 0x95, 0x5d, 0x94, 0xdf,
	0x6a, 0x2c, 0x9f, 0xbc, 0x86, 0x4d, 0x8f, 0x33, 0xa0, 0x38, 0xaf, 0xe5, 0x4e, 0xba, 0xf0, 0x91,
	0x8d, 0xd1, 0xf5, 0x22, 0x8f, 0x8f, 0x5a, 0xa7, 0xbe, 0xca, 0xc2, 0xa3, 0x28, 0xb6, 0xab, 0x15,
	0xcb, 0x39, 0x9e, 0x21, 0x9a, 0x1b, 0x82, 0xe3, 0x19, 0x22, 0x3d, 0x84, 0xe7, 0x37, 0x18, 0x7b,
	0xb3, 0x45, 0xa9, 0x01, 0xb9, 0x87, 0x52, 0x78, 0x51, 0x35, 0x86, 0x61, 0xce, 0xef, 0x39, 0xf4,
	0xb5, 0xdd, 0x26, 0x5b, 0xad, 0xd9, 0x46, 0xba, 0x17, 0x19, 0x41, 0x37, 0x0e, 0x43, 0x26, 0x99,
	0x1e, 0x48, 0x62, 0x5c, 0xc7, 0x77, 0x62, 0x3b, 0xb3, 0xd0, 0x13, 0x38, 0x6a, 0x48, 0x2b, 0xeb,
	0xfa, 0x02, 0xe6, 0x98, 0x85, 0x31, 0x6a, 0xf6, 0x7c, 0xcc, 0x7f, 0x80, 0x81, 0x96, 0x6d, 0xc5,
	0x8a, 0x2c, 0xb9, 0xd1, 0x5b, 0x78, 0x5e, 0x03, 0x29, 0x67, 0x7c, 0x54, 0x9e, 0xf1, 0xea, 0xdb,
	0xf8, 0x17, 0x4d, 0xfd, 0x06, 0x3b, 0x63, 0x64, 0x17, 0x88, 0xd7, 0xf3, 0xff, 0x45, 0xdf, 0xba,
	0x31, 0xa5, 0x97, 0x30, 0xf8, 0x8c, 0x8b, 0xa2, 0xf8, 0x35, 0xef, 0x7e, 0x1d, 0xde, 0xd9, 0xdf,
	0x3d, 0xe8, 0xda, 0x69, 0x32, 0x27, 0xdf, 0x41, 0x97, 0xab, 0x14, 0x91, 0x15, 0x6a, 0x02, 0x66,
	0x11, 0xfd, 0x4a, 0xfe, 0x48, 0x06, 0xb9, 0x87, 0x83, 0x06, 0xfd, 0x21, 0xaf, 0x64, 0x21, 0x2b,
	0x55, 0xce, 0xfa, 0x66, 0x8d, 0x57, 0x9e, 0xe9, 0x02, 0x86, 0x15, 0xb1, 0x22, 0xc7, 0x22, 0xba,
	0x49, 0xc5, 0xac, 0xe5, 0x37, 0x49, 0x0d, 0xf2, 0x06, 0xba, 0x9c, 0x3b, 0xb2, 0x6c, 0x52, 0x0d,
	0xea, 0xc4, 0x52, 0x83, 0xfc, 0x0c, 0xbd, 0x5c, 0x17, 0xc8, 0xfe, 0xb2, 0x80, 0xc8, 0x34, 0x07,
	0x95, 0xfb, 0x3c, 0xfe, 0x1a, 0x76, 0x96, 0x74, 0x85, 0xbc, 0x58, 0xf2, 0x2e, 0xe9, 0x96, 0x75,
	0xd4, 0x60, 0xcd, 0x11, 0xbf, 0x87, 0x5e, 0x2e, 0x3a, 0xaa, 0xa2, 0x65, 0x15, 0xb2, 0xb4, 0xf9,
	0xcd, 0x9a, 0xe8, 0x6b, 0x0a, 0x44, 0xcc, 0xd2, 0x12, 0xd2, 0xc3, 0xea, 0xd6, 0x13, 0x35, 0xc8,
	0x2f, 0x00, 0x85, 0x2c, 0x10, 0xd9, 0x6d, 0x45, 0x7e, 0x2c, 0xb3, 0x6a, 0xc8, 0xab, 0x7e, 0x07,
	0xe4, 0x22, 0xf5, 0xfd, 0xb1, 0xeb, 0x04, 0x1a, 0x54, 0x79, 0x58, 0x57, 0x02, 0x7c, 0x81, 0xa7,
	0x35, 0xca, 0x42, 0x46, 0xb2, 0xd1, 0x46, 0xd1, 0xb1, 0xf6, 0x2b, 0xaf, 0x2d, 0x33, 0x53, 0x83,
	0x4c, 0xe0, 0x59, 0x9d, 0xb4, 0x90, 0xaf, 0xeb, 0x30, 0x4b, 0xb2, 0xa3, 0x7e, 0xf1, 0x8a, 0x9d,
	0x1a, 0xe4, 0x3d, 0x6c, 0x97, 0x23, 0xc9, 0x61, 0x1d, 0x9e, 0x42, 0xaa, 0x2e, 0x03, 0x6a, 0x90,
	0x1f, 0x61, 0x4b, 0x6d, 0x12, 0xb2, 0xa7, 0x06, 0xb5, 0xb4, 0x59, 0xea, 0xe3, 0x3e, 0xc1, 0xb0,
	0xb2, 0x56, 0x49, 0xd5, 0xd3, 0x3a, 0x91, 0xbc, 0x37, 0xca, 0x82, 0x41, 0xa6, 0xb0, 0x57, 0xbb,
	0xa1, 0x09, 0x6d, 0x8a, 0x2d, 0x54, 0xc3, 0x7a, 0xb9, 0xd2, 0x27, 0xcf, 0x71, 0x03, 0xc3, 0xca,
	0x46, 0x56, 0x6f, 0xba, 0x69, 0xfb, 0xab, 0xda, 0x1b, 0x57, 0x39, 0x35, 0xa6, 0x9b, 0xd9, 0x5f,
	0xf0, 0xf3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x27, 0xa2, 0xd5, 0xce, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RuskClient is the client API for Rusk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuskClient interface {
	// Simple echo request
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	// Validate a set of transactions, returning false if at least one of the
	// listed transactions is inconsistent
	ValidateStateTransition(ctx context.Context, in *ValidateStateTransitionRequest, opts ...grpc.CallOption) (*ValidateStateTransitionResponse, error)
	// Phoenix stuff
	GenerateSecretKey(ctx context.Context, in *GenerateSecretKeyRequest, opts ...grpc.CallOption) (*SecretKey, error)
	Keys(ctx context.Context, in *SecretKey, opts ...grpc.CallOption) (*KeysResponse, error)
	Nullifier(ctx context.Context, in *NullifierRequest, opts ...grpc.CallOption) (*NullifierResponse, error)
	NullifierStatus(ctx context.Context, in *NullifierStatusRequest, opts ...grpc.CallOption) (*NullifierStatusResponse, error)
	FetchNote(ctx context.Context, in *FetchNoteRequest, opts ...grpc.CallOption) (*Note, error)
	DecryptNote(ctx context.Context, in *DecryptNoteRequest, opts ...grpc.CallOption) (*DecryptedNote, error)
	OwnedNotes(ctx context.Context, in *OwnedNotesRequest, opts ...grpc.CallOption) (*OwnedNotesResponse, error)
	FullScanOwnedNotes(ctx context.Context, in *ViewKey, opts ...grpc.CallOption) (*OwnedNotesResponse, error)
	NewTransactionInput(ctx context.Context, in *NewTransactionInputRequest, opts ...grpc.CallOption) (*TransactionInput, error)
	NewTransactionOutput(ctx context.Context, in *NewTransactionOutputRequest, opts ...grpc.CallOption) (*TransactionOutput, error)
	NewTransaction(ctx context.Context, in *NewTransactionRequest, opts ...grpc.CallOption) (*Transaction, error)
	SetFeePk(ctx context.Context, in *SetFeePkRequest, opts ...grpc.CallOption) (*Transaction, error)
	VerifyTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*VerifyTransactionResponse, error)
	VerifyTransactionRoot(ctx context.Context, in *VerifyTransactionRootRequest, opts ...grpc.CallOption) (*VerifyTransactionRootResponse, error)
	StoreTransactions(ctx context.Context, in *StoreTransactionsRequest, opts ...grpc.CallOption) (*StoreTransactionsResponse, error)
}

type ruskClient struct {
	cc grpc.ClientConnInterface
}

func NewRuskClient(cc grpc.ClientConnInterface) RuskClient {
	return &ruskClient{cc}
}

func (c *ruskClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) ValidateStateTransition(ctx context.Context, in *ValidateStateTransitionRequest, opts ...grpc.CallOption) (*ValidateStateTransitionResponse, error) {
	out := new(ValidateStateTransitionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/ValidateStateTransition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) GenerateSecretKey(ctx context.Context, in *GenerateSecretKeyRequest, opts ...grpc.CallOption) (*SecretKey, error) {
	out := new(SecretKey)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/GenerateSecretKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) Keys(ctx context.Context, in *SecretKey, opts ...grpc.CallOption) (*KeysResponse, error) {
	out := new(KeysResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/Keys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) Nullifier(ctx context.Context, in *NullifierRequest, opts ...grpc.CallOption) (*NullifierResponse, error) {
	out := new(NullifierResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/Nullifier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NullifierStatus(ctx context.Context, in *NullifierStatusRequest, opts ...grpc.CallOption) (*NullifierStatusResponse, error) {
	out := new(NullifierStatusResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NullifierStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) FetchNote(ctx context.Context, in *FetchNoteRequest, opts ...grpc.CallOption) (*Note, error) {
	out := new(Note)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/FetchNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) DecryptNote(ctx context.Context, in *DecryptNoteRequest, opts ...grpc.CallOption) (*DecryptedNote, error) {
	out := new(DecryptedNote)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/DecryptNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) OwnedNotes(ctx context.Context, in *OwnedNotesRequest, opts ...grpc.CallOption) (*OwnedNotesResponse, error) {
	out := new(OwnedNotesResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/OwnedNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) FullScanOwnedNotes(ctx context.Context, in *ViewKey, opts ...grpc.CallOption) (*OwnedNotesResponse, error) {
	out := new(OwnedNotesResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/FullScanOwnedNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewTransactionInput(ctx context.Context, in *NewTransactionInputRequest, opts ...grpc.CallOption) (*TransactionInput, error) {
	out := new(TransactionInput)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewTransactionInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewTransactionOutput(ctx context.Context, in *NewTransactionOutputRequest, opts ...grpc.CallOption) (*TransactionOutput, error) {
	out := new(TransactionOutput)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewTransactionOutput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewTransaction(ctx context.Context, in *NewTransactionRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) SetFeePk(ctx context.Context, in *SetFeePkRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/SetFeePk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) VerifyTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*VerifyTransactionResponse, error) {
	out := new(VerifyTransactionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/VerifyTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) VerifyTransactionRoot(ctx context.Context, in *VerifyTransactionRootRequest, opts ...grpc.CallOption) (*VerifyTransactionRootResponse, error) {
	out := new(VerifyTransactionRootResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/VerifyTransactionRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) StoreTransactions(ctx context.Context, in *StoreTransactionsRequest, opts ...grpc.CallOption) (*StoreTransactionsResponse, error) {
	out := new(StoreTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/StoreTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuskServer is the server API for Rusk service.
type RuskServer interface {
	// Simple echo request
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	// Validate a set of transactions, returning false if at least one of the
	// listed transactions is inconsistent
	ValidateStateTransition(context.Context, *ValidateStateTransitionRequest) (*ValidateStateTransitionResponse, error)
	// Phoenix stuff
	GenerateSecretKey(context.Context, *GenerateSecretKeyRequest) (*SecretKey, error)
	Keys(context.Context, *SecretKey) (*KeysResponse, error)
	Nullifier(context.Context, *NullifierRequest) (*NullifierResponse, error)
	NullifierStatus(context.Context, *NullifierStatusRequest) (*NullifierStatusResponse, error)
	FetchNote(context.Context, *FetchNoteRequest) (*Note, error)
	DecryptNote(context.Context, *DecryptNoteRequest) (*DecryptedNote, error)
	OwnedNotes(context.Context, *OwnedNotesRequest) (*OwnedNotesResponse, error)
	FullScanOwnedNotes(context.Context, *ViewKey) (*OwnedNotesResponse, error)
	NewTransactionInput(context.Context, *NewTransactionInputRequest) (*TransactionInput, error)
	NewTransactionOutput(context.Context, *NewTransactionOutputRequest) (*TransactionOutput, error)
	NewTransaction(context.Context, *NewTransactionRequest) (*Transaction, error)
	SetFeePk(context.Context, *SetFeePkRequest) (*Transaction, error)
	VerifyTransaction(context.Context, *Transaction) (*VerifyTransactionResponse, error)
	VerifyTransactionRoot(context.Context, *VerifyTransactionRootRequest) (*VerifyTransactionRootResponse, error)
	StoreTransactions(context.Context, *StoreTransactionsRequest) (*StoreTransactionsResponse, error)
}

// UnimplementedRuskServer can be embedded to have forward compatible implementations.
type UnimplementedRuskServer struct {
}

func (*UnimplementedRuskServer) Echo(ctx context.Context, req *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedRuskServer) ValidateStateTransition(ctx context.Context, req *ValidateStateTransitionRequest) (*ValidateStateTransitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateStateTransition not implemented")
}
func (*UnimplementedRuskServer) GenerateSecretKey(ctx context.Context, req *GenerateSecretKeyRequest) (*SecretKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateSecretKey not implemented")
}
func (*UnimplementedRuskServer) Keys(ctx context.Context, req *SecretKey) (*KeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Keys not implemented")
}
func (*UnimplementedRuskServer) Nullifier(ctx context.Context, req *NullifierRequest) (*NullifierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Nullifier not implemented")
}
func (*UnimplementedRuskServer) NullifierStatus(ctx context.Context, req *NullifierStatusRequest) (*NullifierStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NullifierStatus not implemented")
}
func (*UnimplementedRuskServer) FetchNote(ctx context.Context, req *FetchNoteRequest) (*Note, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchNote not implemented")
}
func (*UnimplementedRuskServer) DecryptNote(ctx context.Context, req *DecryptNoteRequest) (*DecryptedNote, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecryptNote not implemented")
}
func (*UnimplementedRuskServer) OwnedNotes(ctx context.Context, req *OwnedNotesRequest) (*OwnedNotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OwnedNotes not implemented")
}
func (*UnimplementedRuskServer) FullScanOwnedNotes(ctx context.Context, req *ViewKey) (*OwnedNotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FullScanOwnedNotes not implemented")
}
func (*UnimplementedRuskServer) NewTransactionInput(ctx context.Context, req *NewTransactionInputRequest) (*TransactionInput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTransactionInput not implemented")
}
func (*UnimplementedRuskServer) NewTransactionOutput(ctx context.Context, req *NewTransactionOutputRequest) (*TransactionOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTransactionOutput not implemented")
}
func (*UnimplementedRuskServer) NewTransaction(ctx context.Context, req *NewTransactionRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTransaction not implemented")
}
func (*UnimplementedRuskServer) SetFeePk(ctx context.Context, req *SetFeePkRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFeePk not implemented")
}
func (*UnimplementedRuskServer) VerifyTransaction(ctx context.Context, req *Transaction) (*VerifyTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyTransaction not implemented")
}
func (*UnimplementedRuskServer) VerifyTransactionRoot(ctx context.Context, req *VerifyTransactionRootRequest) (*VerifyTransactionRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyTransactionRoot not implemented")
}
func (*UnimplementedRuskServer) StoreTransactions(ctx context.Context, req *StoreTransactionsRequest) (*StoreTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreTransactions not implemented")
}

func RegisterRuskServer(s *grpc.Server, srv RuskServer) {
	s.RegisterService(&_Rusk_serviceDesc, srv)
}

func _Rusk_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_ValidateStateTransition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateStateTransitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).ValidateStateTransition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/ValidateStateTransition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).ValidateStateTransition(ctx, req.(*ValidateStateTransitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_GenerateSecretKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateSecretKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).GenerateSecretKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/GenerateSecretKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).GenerateSecretKey(ctx, req.(*GenerateSecretKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).Keys(ctx, req.(*SecretKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_Nullifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).Nullifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/Nullifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).Nullifier(ctx, req.(*NullifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NullifierStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullifierStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NullifierStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NullifierStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NullifierStatus(ctx, req.(*NullifierStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_FetchNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).FetchNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/FetchNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).FetchNote(ctx, req.(*FetchNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_DecryptNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).DecryptNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/DecryptNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).DecryptNote(ctx, req.(*DecryptNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_OwnedNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedNotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).OwnedNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/OwnedNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).OwnedNotes(ctx, req.(*OwnedNotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_FullScanOwnedNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).FullScanOwnedNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/FullScanOwnedNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).FullScanOwnedNotes(ctx, req.(*ViewKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewTransactionInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTransactionInputRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewTransactionInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewTransactionInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewTransactionInput(ctx, req.(*NewTransactionInputRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewTransactionOutput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTransactionOutputRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewTransactionOutput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewTransactionOutput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewTransactionOutput(ctx, req.(*NewTransactionOutputRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewTransaction(ctx, req.(*NewTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_SetFeePk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFeePkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).SetFeePk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/SetFeePk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).SetFeePk(ctx, req.(*SetFeePkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_VerifyTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).VerifyTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/VerifyTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).VerifyTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_VerifyTransactionRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTransactionRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).VerifyTransactionRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/VerifyTransactionRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).VerifyTransactionRoot(ctx, req.(*VerifyTransactionRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_StoreTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).StoreTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/StoreTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).StoreTransactions(ctx, req.(*StoreTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rusk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusk.Rusk",
	HandlerType: (*RuskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Rusk_Echo_Handler,
		},
		{
			MethodName: "ValidateStateTransition",
			Handler:    _Rusk_ValidateStateTransition_Handler,
		},
		{
			MethodName: "GenerateSecretKey",
			Handler:    _Rusk_GenerateSecretKey_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _Rusk_Keys_Handler,
		},
		{
			MethodName: "Nullifier",
			Handler:    _Rusk_Nullifier_Handler,
		},
		{
			MethodName: "NullifierStatus",
			Handler:    _Rusk_NullifierStatus_Handler,
		},
		{
			MethodName: "FetchNote",
			Handler:    _Rusk_FetchNote_Handler,
		},
		{
			MethodName: "DecryptNote",
			Handler:    _Rusk_DecryptNote_Handler,
		},
		{
			MethodName: "OwnedNotes",
			Handler:    _Rusk_OwnedNotes_Handler,
		},
		{
			MethodName: "FullScanOwnedNotes",
			Handler:    _Rusk_FullScanOwnedNotes_Handler,
		},
		{
			MethodName: "NewTransactionInput",
			Handler:    _Rusk_NewTransactionInput_Handler,
		},
		{
			MethodName: "NewTransactionOutput",
			Handler:    _Rusk_NewTransactionOutput_Handler,
		},
		{
			MethodName: "NewTransaction",
			Handler:    _Rusk_NewTransaction_Handler,
		},
		{
			MethodName: "SetFeePk",
			Handler:    _Rusk_SetFeePk_Handler,
		},
		{
			MethodName: "VerifyTransaction",
			Handler:    _Rusk_VerifyTransaction_Handler,
		},
		{
			MethodName: "VerifyTransactionRoot",
			Handler:    _Rusk_VerifyTransactionRoot_Handler,
		},
		{
			MethodName: "StoreTransactions",
			Handler:    _Rusk_StoreTransactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rusk.proto",
}
